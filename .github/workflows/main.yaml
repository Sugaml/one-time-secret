name: OnetimeSecretWorkflow

on:
  push:
    branches:
      - master
      - develop

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    container:
      image: golangci/golangci-lint:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Go dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.GOPATH }}/pkg/mod
          key: go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-cache-${{ env.GOPATH }}/pkg/mod

      - name: Run linting
        run: golangci-lint run -v

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Run go fmt
        run: go fmt $(go list ./... | grep -v /vendor/)

      - name: Run go vet
        run: go vet $(go list ./... | grep -v /vendor/)

      - name: Run tests
        run: go test -race $(go list ./... | grep -v /vendor/)

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Create output directory
        run: mkdir -p __bin__/${{ env.GITHUB_REPOSITORY }}

      - name: Build binary
        run: go build -o __bin__/${{ env.GITHUB_REPOSITORY }} ./...

      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: binary-artifact
          path: __bin__/${{ env.GITHUB_REPOSITORY }}

  docker-build-push:
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/simple-go:${{ github.sha }}